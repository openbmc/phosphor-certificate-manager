{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ca48ab4a_40f70bae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-06-28T04:00:38Z",
      "side": 1,
      "message": "Can you provide more details related to this failure. are you referring generic BMC time failure issue or genesis boot path?",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad30363a_48d06411",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-28T04:11:53Z",
      "side": 1,
      "message": "For x86 systems without a RTC battery, the BMC will get such time.\nThis is just an example of how BMC could get a certificate that has expired time.\n\nIn real world, although the self-signed certificate has 10 years valid time, it will expire anyway.",
      "parentUuid": "ca48ab4a_40f70bae",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3930f2_86f4ebfd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-06-28T09:16:22Z",
      "side": 1,
      "message": "Certificate manager provides infrastructure code to manage  all tyopes of certificates. certificate expiry check is one of the feature enabled here. For any feature disablement need to go through the process , by getting approval from community by sending mail to community . Here you are talking to special use case related to bmcweb consumed certificates. you can meet this requirement by introducing build level flag, ( default check is enabled) here.",
      "parentUuid": "ad30363a_48d06411",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89f1e91d_142f9a09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-28T09:20:59Z",
      "side": 1,
      "message": "Yup, ideally certificate manager should reject an expired certificate.\nThe problem is really related to Redfish that it provides the \"ReplaceCertificate\" URI, that is to replace an existing certificate.\n\nIf an existing certificate expires and is rejected by certificate-manager, we won\u0027t be able to replace it because it\u0027s not on DBus anymore.\n\nI will send an email to the list to discuss this.",
      "parentUuid": "fe3930f2_86f4ebfd",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd508b39_da70b563",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-06-28T10:32:08Z",
      "side": 1,
      "message": "Thanks for initiating mail.\nTo fix this issue ,  I think we can look below option, if community agrees \n - Reject certificate upload requests for the expired certificates ( same as current behaviour)\n - During certificate manager startup, allow certificate restore  for all the valid installed certificates in the systems, including expired ones. For expired cerificates Log message and continue certificate installation. \n    This required some code restructure.",
      "parentUuid": "89f1e91d_142f9a09",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f4efa1_b85977bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-06-28T11:24:06Z",
      "side": 1,
      "message": "Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?  Right now there is a \"ValidNotAfter\" and \"ValidNotBefore\" but these push a good deal of calculation out into the dbus-client.  Ideally we\u0027d add this property and have timers to automatically update it (send send appropriate dbus signal for property-changed) when the certificate expires.",
      "parentUuid": "cd508b39_da70b563",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46673ac1_735b14ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-28T11:46:52Z",
      "side": 1,
      "message": "\u003e Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\u003e  Ideally we\u0027d add this property and have timers to automatically update it (send send appropriate dbus signal for property-changed) when the certificate expires.\n\nThis is kind of off-topic. And it does not sounds good:\n1. certificate-manager will have to \"monitor\" the date and update the property at the time when it expires, e.g. if user change the time back and forth, the property will have to be updated accordingly.\n2. If a certificate expires, the BMC should not update it automatically unless it\u0027s the self-signed. If user uploads a valid certificate and it expires, it is not expected to be replaced automatically.",
      "parentUuid": "80f4efa1_b85977bd",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0764aa79_da5fff7a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-06-28T13:28:01Z",
      "side": 1,
      "message": "\u003e This is kind of off-topic.\n\nI don\u0027t understand why you think it is off-topic.  Previous implementation didn\u0027t expose expired certificates.  Now you are proposing that we do.  We should make it easy for clients.\n\n\u003e And it does not sounds good:\n\nDoing things right isn\u0027t always easy.",
      "parentUuid": "46673ac1_735b14ca",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2756b6eb_c2e2b958",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T18:29:47Z",
      "side": 1,
      "message": "\u003e Yup, ideally certificate manager should reject an expired certificate.\n\nI don\u0027t really think we should impose that.  If a user wants to set an expired certificate, it\u0027s considerably less friction to just allow them to set it.  I say this because there might be test harnesses in the future that are testing for year 2038 compatibility, so if we ever set the date far in the future, should certs fail to load?  I think it\u0027s easier if we just do what the user asked for, regardless of if it\u0027s \"wrong\", otherwise the bmc has to speculate about what the user intended.\n\n\u003e Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\nWho would use that property if it existed?  I agree with Lei here that it turns certificate manager from being entirely event driven (only reacts on dbus messages), to needing some kind of polling task to see if the cert has expired.  Maybe it\u0027s not that difficult to implement, but I don\u0027t really understand who would use that information over what\u0027s available.",
      "parentUuid": "0764aa79_da5fff7a",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78408d3f_994cd876",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-06-28T20:59:48Z",
      "side": 1,
      "message": "\u003e\u003e Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\u003e Who would use that property if it existed?\n\nTo be honest, I don\u0027t know.  Like I said, prior to this proposal we didn\u0027t expose expired certificates so there was an implication that all Certificate objects were non-expired.  Who uses the Certificate objects?\n\nThe Certificate objects already expose information about their expiration.  Why is that?  If it was just because it was data that was already in the X509 then maybe there aren\u0027t any users of it.  If there are users of it, or there now needs to be, punting the calculation of expiration into the clients seems pretty lame.\n\nMaybe you could make an argument that you don\u0027t need a property-changed on an expired property and whenever someone calls get-property on it you use the SSL helpers to determine if it is expired in the get-property handler (ie. check for X509_V_ERR_CERT_HAS_EXPIRED).",
      "parentUuid": "2756b6eb_c2e2b958",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90084d4e_d2fdad3a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T21:13:34Z",
      "side": 1,
      "message": "\u003e \u003e\u003e Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\u003e \u003e Who would use that property if it existed?\n\u003e \n\u003e To be honest, I don\u0027t know.  Like I said, prior to this proposal we didn\u0027t expose expired certificates so there was an implication that all Certificate objects were non-expired.  Who uses the Certificate objects?\n\nCertificateService is the one user I know of, and we don\u0027t care if the cert is expired, we just publish the dates of validity.\n\n\u003e \n\u003e The Certificate objects already expose information about their expiration.  Why is that?  If it was just because it was data that was already in the X509 then maybe there aren\u0027t any users of it.\n\u003e  If there are users of it, or there now needs to be, punting the calculation of expiration into the clients seems pretty lame.\n\n\nbmcweb publishes the expiration information because it\u0027s a field in Redfish.  Redfish publishes it because in theory someone might want to check/alarm/report the date of validity to a user, but the bmc not thinking the cert is valid doesn\u0027t really matter most of the time (the BMC RTC could be unset or wrong);  It\u0027s the users instance that cares, and that\u0027s why the onus is put on the off-the-bmc clients to calculate the expiration against the current time.  If they want to compare against the bmc time, in theory they could, but they should be comparing against their own time for a client-facing cert, because that\u0027s what the connecting client TLS sockets will compare.\n\n\u003e \n\u003e Maybe you could make an argument that you don\u0027t need a property-changed on an expired property and whenever someone calls get-property on it you use the SSL helpers to determine if it is expired in the get-property handler (ie. check for X509_V_ERR_CERT_HAS_EXPIRED).\n\nI\u0027m still not sure what the use case is.  Is there something inside the bmc that cares if the cert is expired?  If there isn\u0027t, I\u0027d say just omit it for the time being.  If there is a use case, I\u0027m not against adding it.",
      "parentUuid": "78408d3f_994cd876",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb71c6a1_8e6e50fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-28T21:13:57Z",
      "side": 1,
      "message": "This seems like a bug. Instead of exposing expired certificates. Does calling DeleteAll on the manager and then Install work?",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a40bc4e_16588b5b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-29T05:46:17Z",
      "side": 1,
      "message": "Well, yup it could be fixed by calling cert-manager\u0027s install, but this introduces more complex logic to query/remove/install certificates.\nPreviously, it simply \"replace\" an existing one.\n\nAnd it still does not fix the Redfish\u0027s ReplaceCertificate issue, which assumes that there is an existing certificate to be replaced.",
      "parentUuid": "cb71c6a1_8e6e50fc",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90676c5a_1c6de25f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-28T04:58:39Z",
      "side": 1,
      "message": "Changing the code here will also allow uploading expired certificate I think, though it will not bring problems (https traffic is still encrypted with an expired cert)...",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb649b63_65519237",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T18:24:41Z",
      "side": 1,
      "message": "A couple ideas here (no strong opinions)\n1. Now that we support certificate expirations past 2038 (thank you Nan) can we just set the validity to for example, 100 years, and then this problem goes away?\n\n2. Could the bmc default to a \"time\" of something with epoch starting at the date the firmware was built?\n\n\nAs written, I\u0027m probably ok with this patch, we should probably allow setting a certificate that has date issues for compatibility, but it seems like something there\u0027s better ways to solve in the general case.",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f0a4f76_af4b3d31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T04:14:08Z",
      "side": 1,
      "message": "What are next steps on this?",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a85fb22d_96181e0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-07-25T05:21:14Z",
      "side": 1,
      "message": "Good question...\n\nThere are several ideas:\n\n1. @Patrick wants an \"ExpiredBefore\" property\n2. @Jayanth wants to reject installing expired certs, but keep allowing existing exipired certs.\n3. @Jiaqing seems agree with this patch for allowing expired certs.\n4. @Nan wants to fix a bug related to installing certificate in bmcweb.\n\nFor 1, I do not see a use case of the property, and we can NOT treat the certs on DBus valid, because a certificate will expire anyway when the time reaches the expire date, and currently we don\u0027t have such timer callback to remove the DBus objects.\nFor 2, it may be a good idea, but the behavior become inconsistent for uploaded and existing certificates. It we agree to allow existing expired certificates, why can\u0027t a user upload an expired one?\nFor 3. it agrees with this patch.\nFor 4, it is more or less related to bmcweb, or at least it requires both changes in bmcweb and cert-manager, which needs further discussion and it is kinds of related to the Redfish API about `CertificateService.ReplaceCertificate`.\n\nCurrently:\n* We hit a bug related to the current behavior and this patch does fix the bug.\n* The expired certificate does NOT make BMC less secure, it\u0027s more or less the same.\nSo I think the patch could be merged.\nThe side effect is that the DBus object will be created for the expired certificate when BMC reboots and could be replaced, which is better than no DBus objects at all and there is no way to replace it.",
      "parentUuid": "7f0a4f76_af4b3d31",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7c6d70_b6381fa7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-16T18:22:23Z",
      "side": 1,
      "message": "Phosphor-certificate-manager Maintainers, can you reply to the above please?\n\nFWIW, The quick description of my position is that the BMC should allow installing any certificate without checking date validity.  I don\u0027t think we need a property that exposes the time, but I\u0027m not against it if there\u0027s a use case.\n\nI agree with Lei, as-written, I think this patchset can merge.",
      "parentUuid": "a85fb22d_96181e0f",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9771cf1f_7124f32a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-16T18:58:23Z",
      "side": 1,
      "message": "I thought the main concern is no. 2?\n\nInstalling an expired cert is fine IMO. Clients should do whatever check they want.",
      "parentUuid": "6a7c6d70_b6381fa7",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5ce8cef_18547485",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-29T19:43:27Z",
      "side": 1,
      "message": "@Jayanth?",
      "parentUuid": "9771cf1f_7124f32a",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f94872_19f32f06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-10-04T06:55:14Z",
      "side": 1,
      "message": "jayanth is on vacation, will ask him to take a look when he is back",
      "parentUuid": "e5ce8cef_18547485",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5710bf9a_b6d4f84f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-10-12T07:03:09Z",
      "side": 1,
      "message": "Since we are debating the certificate upload policy. I think we can use build or settings level policy to control this. We can keep the current behavior as default and user can change the policy as required.",
      "parentUuid": "92f94872_19f32f06",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}