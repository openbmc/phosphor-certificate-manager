{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ca48ab4a_40f70bae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-06-28T04:00:38Z",
      "side": 1,
      "message": "Can you provide more details related to this failure. are you referring generic BMC time failure issue or genesis boot path?",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad30363a_48d06411",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-28T04:11:53Z",
      "side": 1,
      "message": "For x86 systems without a RTC battery, the BMC will get such time.\nThis is just an example of how BMC could get a certificate that has expired time.\n\nIn real world, although the self-signed certificate has 10 years valid time, it will expire anyway.",
      "parentUuid": "ca48ab4a_40f70bae",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3930f2_86f4ebfd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-06-28T09:16:22Z",
      "side": 1,
      "message": "Certificate manager provides infrastructure code to manage  all tyopes of certificates. certificate expiry check is one of the feature enabled here. For any feature disablement need to go through the process , by getting approval from community by sending mail to community . Here you are talking to special use case related to bmcweb consumed certificates. you can meet this requirement by introducing build level flag, ( default check is enabled) here.",
      "parentUuid": "ad30363a_48d06411",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89f1e91d_142f9a09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-28T09:20:59Z",
      "side": 1,
      "message": "Yup, ideally certificate manager should reject an expired certificate.\nThe problem is really related to Redfish that it provides the \"ReplaceCertificate\" URI, that is to replace an existing certificate.\n\nIf an existing certificate expires and is rejected by certificate-manager, we won\u0027t be able to replace it because it\u0027s not on DBus anymore.\n\nI will send an email to the list to discuss this.",
      "parentUuid": "fe3930f2_86f4ebfd",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd508b39_da70b563",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000086
      },
      "writtenOn": "2022-06-28T10:32:08Z",
      "side": 1,
      "message": "Thanks for initiating mail.\nTo fix this issue ,  I think we can look below option, if community agrees \n - Reject certificate upload requests for the expired certificates ( same as current behaviour)\n - During certificate manager startup, allow certificate restore  for all the valid installed certificates in the systems, including expired ones. For expired cerificates Log message and continue certificate installation. \n    This required some code restructure.",
      "parentUuid": "89f1e91d_142f9a09",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f4efa1_b85977bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-06-28T11:24:06Z",
      "side": 1,
      "message": "Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?  Right now there is a \"ValidNotAfter\" and \"ValidNotBefore\" but these push a good deal of calculation out into the dbus-client.  Ideally we\u0027d add this property and have timers to automatically update it (send send appropriate dbus signal for property-changed) when the certificate expires.",
      "parentUuid": "cd508b39_da70b563",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46673ac1_735b14ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-06-28T11:46:52Z",
      "side": 1,
      "message": "\u003e Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\u003e  Ideally we\u0027d add this property and have timers to automatically update it (send send appropriate dbus signal for property-changed) when the certificate expires.\n\nThis is kind of off-topic. And it does not sounds good:\n1. certificate-manager will have to \"monitor\" the date and update the property at the time when it expires, e.g. if user change the time back and forth, the property will have to be updated accordingly.\n2. If a certificate expires, the BMC should not update it automatically unless it\u0027s the self-signed. If user uploads a valid certificate and it expires, it is not expected to be replaced automatically.",
      "parentUuid": "80f4efa1_b85977bd",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0764aa79_da5fff7a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-06-28T13:28:01Z",
      "side": 1,
      "message": "\u003e This is kind of off-topic.\n\nI don\u0027t understand why you think it is off-topic.  Previous implementation didn\u0027t expose expired certificates.  Now you are proposing that we do.  We should make it easy for clients.\n\n\u003e And it does not sounds good:\n\nDoing things right isn\u0027t always easy.",
      "parentUuid": "46673ac1_735b14ca",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2756b6eb_c2e2b958",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T18:29:47Z",
      "side": 1,
      "message": "\u003e Yup, ideally certificate manager should reject an expired certificate.\n\nI don\u0027t really think we should impose that.  If a user wants to set an expired certificate, it\u0027s considerably less friction to just allow them to set it.  I say this because there might be test harnesses in the future that are testing for year 2038 compatibility, so if we ever set the date far in the future, should certs fail to load?  I think it\u0027s easier if we just do what the user asked for, regardless of if it\u0027s \"wrong\", otherwise the bmc has to speculate about what the user intended.\n\n\u003e Do we need to add a property to xyz.openbmc_project.Certs.Certificate to indicate that the certificate is expired?\n\nWho would use that property if it existed?  I agree with Lei here that it turns certificate manager from being entirely event driven (only reacts on dbus messages), to needing some kind of polling task to see if the cert has expired.  Maybe it\u0027s not that difficult to implement, but I don\u0027t really understand who would use that information over what\u0027s available.",
      "parentUuid": "0764aa79_da5fff7a",
      "range": {
        "startLine": 12,
        "startChar": 2,
        "endLine": 13,
        "endChar": 66
      },
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90676c5a_1c6de25f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-28T04:58:39Z",
      "side": 1,
      "message": "Changing the code here will also allow uploading expired certificate I think, though it will not bring problems (https traffic is still encrypted with an expired cert)...",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb649b63_65519237",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T18:24:41Z",
      "side": 1,
      "message": "A couple ideas here (no strong opinions)\n1. Now that we support certificate expirations past 2038 (thank you Nan) can we just set the validity to for example, 100 years, and then this problem goes away?\n\n2. Could the bmc default to a \"time\" of something with epoch starting at the date the firmware was built?\n\n\nAs written, I\u0027m probably ok with this patch, we should probably allow setting a certificate that has date issues for compatibility, but it seems like something there\u0027s better ways to solve in the general case.",
      "revId": "dea3b8973eb26e3acefcc3a15a93db3e998c91dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}