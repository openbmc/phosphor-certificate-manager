{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ce979fd7_11877b31",
        "filename": "config.h.in",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-11-18T21:28:40Z",
      "side": 1,
      "message": "Can we use a constexpr instead of #define?",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31302c3e_e4b9b258",
        "filename": "config.h.in",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-23T12:34:06Z",
      "side": 1,
      "message": "We could, but this is more like \"configure\" concept in autotools, and this is really a configure option, so I prefer this way.",
      "parentUuid": "ce979fd7_11877b31",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e9c8544_5a874d09",
        "filename": "config.h.in",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-11-23T19:01:23Z",
      "side": 1,
      "message": "I\u0027ll let the maintainer decide, but I don\u0027t agree with this argument.  We\u0027ve graduated from autotools and C.  Why keep acting like we\u0027re using them?",
      "parentUuid": "31302c3e_e4b9b258",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d0f2388_268067eb",
        "filename": "config.h.in",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-11-24T04:44:38Z",
      "side": 1,
      "message": "Please correct me, if we use constexpr I assume there is no way to set this value at build time? unless we modify the code.",
      "parentUuid": "4e9c8544_5a874d09",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fdde148_c64eea36",
        "filename": "config.h.in",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-11-28T20:45:12Z",
      "side": 1,
      "message": "See line 23.  We already create with \"@authorities_list_name@\" into a constexpr.  There is no reason you can\u0027t initialize a boolean the same way.",
      "parentUuid": "2d0f2388_268067eb",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2f29b49_f2f02931",
        "filename": "config.h.in",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-29T11:35:05Z",
      "side": 1,
      "message": "Updated",
      "parentUuid": "3fdde148_c64eea36",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f70bc7c_70e9899c",
        "filename": "meson_options.txt",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-11-18T21:28:40Z",
      "side": 1,
      "message": "Do we need something to default: enabled?",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4cc1302_f4057ad6",
        "filename": "meson_options.txt",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-23T12:34:06Z",
      "side": 1,
      "message": "Done.\n\nIt\u0027s not disabled by default, so the `not get_option(\u0027allow-expired\u0027).disabled()` in meson.build is true by default.\n\nBut yup let\u0027s make it specific to enable this option.",
      "parentUuid": "4f70bc7c_70e9899c",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30e215c4_464ee2eb",
        "filename": "x509_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-11-18T21:28:40Z",
      "side": 1,
      "message": "I\u0027d much prefer constexpr-if here instead of #define.  Let\u0027s use C++.",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3fa6a3f_79ce8d50",
        "filename": "x509_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2022-11-23T12:34:06Z",
      "side": 1,
      "message": "The same as in config.h.in, I would prefer making it more \"configure\" way.",
      "parentUuid": "30e215c4_464ee2eb",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41d8b9d1_38126053",
        "filename": "x509_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-11-28T20:26:02Z",
      "side": 1,
      "message": "The \"build time configuration\" of pkg-config / meson config can still be met by telling meson to adjust the initializer based on the selected config variable.\n\nThis would allow the code to read as just conditionals vs the #if{,n}def that is left aligned in this block.\n\n(This readability is also behind the Linux if(defined(VAR)) macros)",
      "parentUuid": "a3fa6a3f_79ce8d50",
      "revId": "f31717b3b8edaaf0e9f05199c00c71c6298b07e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}