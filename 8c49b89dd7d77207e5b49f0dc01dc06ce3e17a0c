{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ad1ed03_5954ae20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-01-03T13:18:21Z",
      "side": 1,
      "message": "I don\u0027t have much in the way of opinions on this.  Seems like a straight-forward change to the includes.\n\nIf this is a valuable tool to run it would be nice if we could get it in openbmc-build-scripts so it is used everywhere in CI.",
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a38b27e_6f38fbca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-04T18:16:41Z",
      "side": 1,
      "message": "Thanks for your comment Patrick. \n\nAs said in the IWYU homepage, it was originally developed specifically for the Google source tree. According to my experience, it was not so reliable that we can automatically accept all its suggestions, especially in the OpenBMC environment. It\u0027s good to run before sending a PR though.",
      "parentUuid": "0ad1ed03_5954ae20",
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c21d0e0f_ae6baa1f",
        "filename": "argument.cpp",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-05T08:43:41Z",
      "side": 1,
      "message": "as getopt.h is included in argument.hpp these header files are not required, compiles even if I remove them.\nstarted testing as the commit message says best iwyu works on best effort.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 18
      },
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b209b06_a844a3b8",
        "filename": "argument.cpp",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-05T21:35:18Z",
      "side": 1,
      "message": "cstdlib is for exit.\n\nYeah, unistd is not needed to the best of my knowlege. Fixed. Might be a false positive in IWYU. Thanks!\n\nAnd yeah, removing any of the headers we added in this change won\u0027t cause any compilation issue, since they are all added by other headers implicitly. IWYU recommends no relying on it but add all headers explicitly.",
      "parentUuid": "c21d0e0f_ae6baa1f",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 18
      },
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df1a78c0_30212666",
        "filename": "argument.cpp",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-05T08:43:41Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 18
      },
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "010c86b2_ebf8fce4",
        "filename": "argument.cpp",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-05T21:35:18Z",
      "side": 1,
      "message": "pair is for pair. I believe this is needed. We used std::map here.",
      "parentUuid": "df1a78c0_30212666",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 18
      },
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fecb3f4_7660052f",
        "filename": "certificate.hpp",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-05T08:43:41Z",
      "side": 1,
      "message": "code compiles without these too but I guess they are getting the includes from some other header file. I can see that functional and string headers are coming from watch.hpp.\n\nI guess it is good to include these headers here or else when we remove watch.hpp include in this header file due to some reason, we will be forced to bring back these.\n\nlooks like we need to take what ever is given by iwwyu as it includes files logically.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 13,
        "endChar": 24
      },
      "revId": "8c49b89dd7d77207e5b49f0dc01dc06ce3e17a0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}