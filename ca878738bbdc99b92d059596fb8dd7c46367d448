{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb1c3fd_183ceee1",
        "filename": "certificate.hpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000089
      },
      "writtenOn": "2022-01-05T07:07:42Z",
      "side": 0,
      "message": "I would have preferred to use type alias for these complex types, if we have a better solution, but can forgo assuming that it pollutes the namespace.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 70
      },
      "revId": "ca878738bbdc99b92d059596fb8dd7c46367d448",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d8c6158_82366e4f",
        "filename": "certificate.hpp",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-05T21:27:37Z",
      "side": 0,
      "message": "We can put them into class if we want to avoid these unique pointers. But it\u0027s not a big deal since any clients can declare alias in source files. In headers, these types only appear one or two times.",
      "parentUuid": "cfb1c3fd_183ceee1",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 70
      },
      "revId": "ca878738bbdc99b92d059596fb8dd7c46367d448",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}