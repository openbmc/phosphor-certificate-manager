Checks: '
-*,
bugprone-*,
-bugprone-assignment-in-if-condition,
-bugprone-easily-swappable-parameters,
-bugprone-exception-escape,
cert-*,
-cert-err33-c,
-cert-err58-cpp,
clang-analyzer-*,
-clang-analyzer-optin.*,
-clang-analyzer-osx.*,
-clang-analyzer-webkit.*,
-clang-analyzer-apiModeling.StdCLibraryFunctions,
-clang-analyzer-optin.cplusplus.VirtualCall,
cppcoreguideline-*,
-cppcoreguidelines-avoid-c-arrays,
-cppcoreguidelines-avoid-non-const-global-variables,
-cppcoreguidelines-explicit-virtual-functions,
-cppcoreguidelines-no-malloc,
-cppcoreguidelines-pro-bounds-array-to-pointer-decay,
-cppcoreguidelines-pro-bounds-pointer-arithmetic,
-cppcoreguidelines-pro-type-reinterpret-cast,
-cppcoreguidelines-pro-type-vararg,
misc-*,
-misc-const-correctness,
-misc-include-cleaner,
-misc-non-private-member-variables-in-classes,
modernize-*,
-modernize-avoid-c-arrays,
-modernize-concat-nested-namespaces,
-modernize-pass-by-value,
-modernize-use-auto,
-modernize-use-override,
-modernize-use-trailing-return-type,
performance-*,
-performance-avoid-endl,
-performance-enum-size,
-performance-inefficient-string-concatenation,
-performance-inefficient-vector-operation,
-performance-move-const-arg,
-performance-unnecessary-value-param,
readability-*,
-readability-avoid-const-params-in-decls,
-readability-braces-around-statements,
-readability-container-data-pointer,
-readability-convert-member-functions-to-static,
-readability-else-after-return,
-readability-function-cognitive-complexity,
-readability-identifier-length,
-readability-implicit-bool-conversion,
-readability-make-member-function-const,
-readability-qualified-auto,
-readability-redundant-inline-specifier,
-readability-simplify-boolean-expr,
-readability-uppercase-literal-suffix,
'

# Treat all warnings as errors
WarningsAsErrors: '*'

# Apply checks to all files
HeaderFilterRegex: '.*'
CheckOptions:
  - { key: readability-identifier-naming.ClassCase,         value: CamelCase  }
  - { key: readability-identifier-naming.EnumCase,          value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantCase,  value: camelBack  }
  - { key: readability-identifier-naming.FunctionCase,      value: camelBack  }
  - { key: readability-identifier-naming.NamespaceCase,     value: lower_case }
  - { key: readability-identifier-naming.ParameterCase,     value: camelBack  }
  - { key: readability-identifier-naming.StructCase,        value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,      value: camelBack  }

# Disable automatic formatting
FormatStyle: none
